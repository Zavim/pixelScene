import {
  ArchetypeBucket,
  Bucket,
  DerivedEntityBucket,
  EntityBucket,
  PredicateBucket,
  World,
  hasAnyComponents,
  hasComponents,
  hasNoComponents,
  isArchetype,
  memoizeQuery,
  normalizeComponents,
  normalizeQuery,
  not
} from "./chunk-O5CPHMQJ.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@hmans/queue/dist/hmans-queue.esm.js
function createQueue() {
  var queue2 = new Array();
  function add(fn) {
    queue2.push(fn);
  }
  function clear() {
    queue2.length = 0;
  }
  function flush() {
    queue2.forEach(function(fn) {
      return fn();
    });
    clear();
  }
  add.clear = clear;
  add.flush = flush;
  return add;
}

// node_modules/miniplex/dist/miniplex.esm.js
var queue = createQueue();
export {
  ArchetypeBucket,
  Bucket,
  DerivedEntityBucket,
  EntityBucket,
  PredicateBucket,
  World,
  hasAnyComponents,
  hasComponents,
  hasNoComponents,
  isArchetype,
  memoizeQuery,
  normalizeComponents,
  normalizeQuery,
  not,
  queue
};
//# sourceMappingURL=miniplex.js.map
