import { Input, Unit } from "../units";
export declare const SceneColor: (uv: Input<"vec2">, texture: Unit<"sampler2D">) => {
    color: Unit<"vec3">;
    alpha: import("../units").IUnit<"float">;
    _: "Unit";
    _unitConfig: import("../units").UnitConfig<"vec4">;
    _unitState: import("../units").UnitState<"vec4">;
    x: import("../units").IUnit<"float">;
    y: import("../units").IUnit<"float">;
    z: import("../units").IUnit<"float">;
    w: import("../units").IUnit<"float">;
};
/**
 * Sample a depth texture and return the raw depth value.
 *
 * @param uv Screen UV
 * @param depthTexture Depth texture to sample
 * @returns Float unit containing the depth as stored in the texture
 */
export declare const RawDepth: (uv: Input<"vec2">, depthTexture: Unit<"sampler2D">) => import("../units").IUnit<"float">;
/**
 * Sample a depth texture and return the depth value in eye space units.
 *
 * @param xy Screen position
 * @param depthTexture Depth texture to sample
 * @param cameraNear Camera near plane (defaults to CameraNear)
 * @param cameraFar Camera far plane (defaults to CameraFar)
 * @returns Float unit containing the depth in eye space units
 */
export declare const PerspectiveDepth: (xy: Input<"vec2">, depthTexture: Unit<"sampler2D">, cameraNear?: Input<"float">, cameraFar?: Input<"float">) => import("../units").IUnit<"float">;
