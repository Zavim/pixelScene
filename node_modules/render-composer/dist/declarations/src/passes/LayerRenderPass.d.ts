/// <reference types="react" />
import { RenderPass } from "postprocessing";
import { Camera, Material, Scene, WebGLRenderer, WebGLRenderTarget } from "three";
export declare type LayerRenderPassProps = {
    layerMask: number;
    ignoreBackground?: boolean;
    clear?: boolean;
    camera: Camera;
    scene: Scene;
};
export declare const LayerRenderPass: import("react").ForwardRefExoticComponent<LayerRenderPassProps & import("react").RefAttributes<LayerRenderPassImpl>>;
export declare class LayerRenderPassImpl extends RenderPass {
    layerMask: number;
    constructor(scene: Scene, camera: Camera, overrideMaterial?: Material, layerMask?: number);
    render(renderer: WebGLRenderer, inputBuffer: WebGLRenderTarget, outputBuffer: WebGLRenderTarget, deltaTime: number, stencilTest: boolean): void;
}
